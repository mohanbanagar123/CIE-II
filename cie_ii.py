# -*- coding: utf-8 -*-
"""CIE-II.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CuAXgKqeFX-y5F-FZvkwlo2Xj_1e437L
"""

import pandas as pd
from scipy import stats

df=pd.read_csv('titanic.csv')
zscore=stats.zscore(df['Pclass'])
threshold=3
outliers=[abs(zscore)>threshold]

import pandas as pd

df=pd.read_csv('titanic.csv')
df.head()

df.describe()

df.info()

df.duplicated()

df['Pclass'].unique()

df.corr()

df.isnull()

import statistics

age_mean=df['Age'].mean()
age_median=df['Age'].median()
age_mode=statistics.mode(df['Age'])

fare_mean=df['Fare'].mean()
fare_median=df['Fare'].median()
fare_mode=statistics.mode(df['Fare'])

print("Mean of age is :",age_mean)
print("Median of age is :",age_median)
print("Mode value of age is :",age_mode)

print("Mean value of Fare is :",fare_mean)
print("Median of Fare is :",fare_median)
print("Mode value of Fare is :",fare_mode)

import matplotlib.pyplot as plt
df['Survived'].replace({0:'not survived',1:' survived'},inplace= True)

survived_pclass_count = df.groupby(['Survived', 'Pclass']).size().unstack()

survived_pclass_count.plot(kind='bar', stacked=True)
plt.title('Survived vs. Pclass')
plt.xlabel('Survived')
plt.ylabel('Count')
plt.show()

import pandas as pd
df=pd.read_csv('titanic.csv')

null_age=df['Age'].isnull().sum()
null_fare=df['Fare'].isnull().sum()

mean_age=df['Age'].mean()
mean_fare=df['Fare'].mean()

df['Age'].fillna(mean_age,inplace=True)
df['Fare'].fillna(mean_fare,inplace=True)

null_age_after=df['Age'].isnull().sum()
null_fare_after=df['Fare'].isnull().sum()

print("Null values in age before :",null_age)
print("Null values in age after :",null_age_after)
print("Null values in fare before :",null_fare)
print("Null values in fare after :",null_fare_after)

from scipy import stats
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8,6))
sns.boxplot(x=df['Fare'])
plt.title("Box plot of outliers")
plt.show()

zscore=stats.zscore(df['Fare'])
threshold=3
zscore_outliers=df[abs(zscore)>threshold]
print("Outliers are :")
print(zscore_outliers)